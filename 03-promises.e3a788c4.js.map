{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAkBA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,kBACnCE,UAAWH,SAASC,cAAc,iBAClCG,YAAaJ,SAASC,cAAc,qBAEhCF,KAAEM,EAAIH,WAAEI,EAAUH,UAAEI,EAASH,YAAEI,GAAgBV,EAC/CW,EAAiB,IAvBvB,MACEC,cAAcC,EAAUC,GACtB,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,GAcfP,EAAKe,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOlB,EAAWmB,OAC9B,MAAMC,EAAOF,OAAOjB,EAAUkB,OACxBE,EAASH,OAAOhB,EAAYiB,OAElC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCnB,EACGC,cAAckB,EAAGL,GACjBM,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBkB,EAAAlC,GAASmC,OAAOC,QACd,uBAAqBrB,QAAiBC,MAAU,IAGnDqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBkB,EAAAlC,GAASmC,OAAOG,QACd,sBAAoBvB,QAAeC,MAAU,IAGnDW,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nclass PromiseCreator {\n  createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  }\n}\n\nconst refs = {\n  form: document.querySelector('.form'),\n  fieldDelay: document.querySelector('[name=\"delay\"]'),\n  fieldStep: document.querySelector('[name=\"step\"]'),\n  fieldAmount: document.querySelector('[name=\"amount\"]'),\n};\nconst { form, fieldDelay, fieldStep, fieldAmount } = refs;\nconst promiseCreator = new PromiseCreator();\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  let delay = Number(fieldDelay.value);\n  const step = Number(fieldStep.value);\n  const amount = Number(fieldAmount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    promiseCreator\n      .createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","fieldDelay","fieldStep","fieldAmount","$47d4ff9957288465$var$form","$47d4ff9957288465$var$fieldDelay","$47d4ff9957288465$var$fieldStep","$47d4ff9957288465$var$fieldAmount","$47d4ff9957288465$var$promiseCreator","createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","delay1","Number","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.e3a788c4.js.map"}