{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAIP,IAAMQ,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,kBACnCE,UAAWH,SAASC,cAAc,iBAClCG,YAAaJ,SAASC,cAAc,oBAGxBI,EAAuCP,EAAvCI,WAAYI,EAA2BR,EAA3BK,UAAWI,EAAgBT,EAAhBM,YAAgBN,EAA7CC,KAEHS,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAMF,IAJA,IAAIC,EAAQC,OAAOP,EAAWQ,OACxBC,EAAOF,OAAON,EAAUO,OACxBE,EAASH,OAAOL,EAAYM,OAEzBG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChC5B,EAAc4B,EAAGL,GACdM,MAAK,SAAAC,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MACjB6B,EAAAjC,GAASkC,OAAOC,QACd,uBAAwCC,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,M,IAGjDiC,OAAM,SAAAL,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MAClB6B,EAAAjC,GAASkC,OAAOI,QACd,sBAAqCF,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,M,IAGjDqB,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst refs = {\n  form: document.querySelector('.form'),\n  fieldDelay: document.querySelector('[name=\"delay\"]'),\n  fieldStep: document.querySelector('[name=\"step\"]'),\n  fieldAmount: document.querySelector('[name=\"amount\"]'),\n};\n\nconst { form, fieldDelay, fieldStep, fieldAmount } = refs;\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  let delay = Number(fieldDelay.value);\n  const step = Number(fieldStep.value);\n  const amount = Number(fieldAmount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delay += step;\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$refs","form","document","querySelector","fieldDelay","fieldStep","fieldAmount","$ce04d3a99e08e73b$var$fieldDelay","$ce04d3a99e08e73b$var$fieldStep","$ce04d3a99e08e73b$var$fieldAmount","addEventListener","e","preventDefault","delay1","Number","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.f709c05e.js.map"}